[tool.poetry]
name = "Website"
version = "0.0.1"
description = "PythonBiellaGroup website"
authors = [
    "PythonBiellaGroup <pythonbiellagroup@gmail.com>"
]
license = "APACHE2"
readme = "README.md"
homepage = "https://dev.pythonbiellagroup.it"
repository = "https://github.com/PythonBiellaGroup/website"
documentation = "https://github.com/PythonBiellaGroup/website"

keywords = [
    "MKDocs",
    "Documentation",
    "Example",
    "Template"
]

[tool.poetry.dependencies]
python = ">=3.9, !=3.9.7, <3.11"
cairosvg = ">=2.7.1"
detect-secrets=">=1.4.0"
jupyter = ">=1.0.0"
loguru = ">=0.7.1"
mkdocs=">=1.5.2"
mkdocs-autorefs=">=0.5.0"
mkdocs-awesome-pages-plugin = "^2.9.2"
mkdocs-git-revision-date-localized-plugin = "^1.2.0"
mkdocs-macros-plugin=">=1.0.4"
mkdocs-material = {git = "https://github.com/squidfunk/mkdocs-material-insiders.git"}
mkdocs-minify-plugin=">=0.7.1"
mkdocs-redirects=">=1.2.1"
mkdocs-rss-plugin = ">=1.8.0"
mkdocs-simple-plugin = ">=3.1.0"
mkdocs-static-i18n = ">=1.0.2"
mkdocstrings-python=">=1.6.2"
pillow = ">=10.0.0"
pngquant = ">=1.0.7"
pre-commit = ">=3.4.0"
pyaml=">=23.9.1"
pydantic=">=2.3.0"
python-dotenv=">=1.0.0"
types-PyYAML=">=6.0.12.11"
types-requests=">=2.31.0.2"
types-urllib3=">=1.26.25.14"
Unidecode=">=1.3.6"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
autoflake = ">=1.3.1"
autopep8 = ">=1.5.7"
bandit = ">=1.7.0"
black = ">=22"
commitizen = ">=2.20.0"
flake8 = ">=5"
flake8-bandit = ">=4"
flake8-builtins = ">=1.5.3"
flake8-isort = ">=4.0.0"
ipython = ">=7.28"
jupyter = ">=1.0.0"
locust = ">=2.14.2"
pre-commit = ">=3.0.2"
pylint = ">=2.8.2"
pytest-cov = ">=2.8.1"
ruff = ">=0.0.282"
yamlfmt = "^1.1.1"

[build-system]
requires = ["poetry-core>=1.5.1"]
build-backend = "poetry.core.masonry.api"

[[tool.poetry.source]]
name = "pypi.org"
url = "https://pypi.org/simple"
priority = "default"

[[tool.poetry.source]]
name = "mkdocs"
url = "https://github.com/squidfunk/mkdocs-material-insiders.git"
priority = "primary"

[tool.pytest.ini_options]
markers = [
    "db: mark test for db functionalities",
    "app: all about the app",
    "api: all about the api",
]

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
line_length = 120
profile = "black"

[tool.black]
line-length = 120
target-version = ['py39']
preview = true

[tool.coverage.run]
branch = true
source = ["app"]

[tool.flake8]
max-line-length = 120
exclude = [".venv", "docs", ".vscode", "pychache", ".git","__pycache__","__init__.py",".mypy_cache",".pytest_cache", "alembic"]
ignore = ["E501", "W503", "E226", "E203", "W503", "W293", "I004", "E266", "W391", "W292", "I001", "S101", "I003", "I005", "A002", "A003", "S608", "W605", "S303", "B303"]

[tool.mypy]
# files = [""]
plugins = ["pydantic.mypy", "sqlmypy"]
disallow_untyped_defs = "True"
disallow_any_unimported = "True"
ignore_missing_imports = "True"
no_implicit_optional = "True"
check_untyped_defs = "True"
warn_return_any = "True"
warn_unused_ignores = "True"
show_error_codes = "True"
exclude = ['volumes/', "alembic/", "scripts/", "docs/", "settings/", ".vscode/", ".venv/", ".pytest_cache/", ".mypy_cache/", ".gitlab/", ".github/", ".devcontainer/", "Docker/", "dashboards/"]

[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "v$major.$minor.$patch$prerelease"
version = "0.1.0"
version_files = [
    "__version__.py",
    "pyproject.toml:version"
]
style = [
    ["qmark", "fg:#ff9d00 bold"],
    ["question", "bold"],
    ["answer", "fg:#ff9d00 bold"],
    ["pointer", "fg:#ff9d00 bold"],
    ["highlighted", "fg:#ff9d00 bold"],
    ["selected", "fg:#cc5454"],
    ["separator", "fg:#cc5454"],
    ["instruction", ""],
    ["text", ""],
    ["disabled", "fg:#858585 italic"]
]